version: "3"

services:

  #PHP FPM Container
  php-fpm:
    container_name: ${PROJECT_NAMESPACE}_php_fpm
    build:
      context: .
      dockerfile: .docker/php-fpm/Dockerfile
    restart: unless-stopped
    volumes:
      - ./source_code:${PROJECT_ROOT}
    environment:
      - VERBOSE=false
    networks:
      - magento2_dev
    links:
      - mysql

  #PHP FPM Container
  php-cli:
    container_name: ${PROJECT_NAMESPACE}_php_cli
    build:
      context: .
      dockerfile: .docker/php-cli/Dockerfile
    restart: unless-stopped
    volumes:
      - ./source_code:${PROJECT_ROOT}
    environment:
      - VERBOSE=false
    networks:
      - magento2_dev
    links:
      - mysql
    tty: true

  #NGINX Container
  nginx:
    container_name: ${PROJECT_NAMESPACE}_nginx
    build:
      context: .
      dockerfile: .docker/nginx/Dockerfile
    restart: unless-stopped
    volumes:
      - ./source_code:${PROJECT_ROOT}
    ports:
      - 80:80
      - 443:443
    networks:
      - magento2_dev
    links:
      - php-fpm

  #MySQL Container
  mysql:
    container_name: ${PROJECT_NAMESPACE}_mysql
    build:
      context: .
      dockerfile: .docker/mysql/Dockerfile
    restart: unless-stopped
    volumes:
      - database:/var/lib/mysql
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER_NAME=${MYSQL_USER_NAME}
      - MYSQL_USER_PASSWORD=${MYSQL_USER_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    networks:
      - magento2_dev

#Volumes
volumes:
  database:

#Networks
networks:
  magento2_dev:
    driver: bridge

