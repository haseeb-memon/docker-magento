# Force Redirct To Secure Website
server {
    listen          NGINX_UNSECURE_PORT         default_server;
    listen          [::]:NGINX_UNSECURE_PORT    default_server;
    server_name     PROJECT_DOMAIN PROJECT_URL;
    # redirects both www and non-www to https
    return  301     https://$server_name$request_uri;
}

# SSL Configuration
server {

    listen              NGINX_SECURE_PORT       ssl http2 default_server;
    listen              [::]:NGINX_SECURE_PORT  ssl http2 default_server;
    server_name         PROJECT_DOMAIN PROJECT_URL;
    root                PROJECT_ROOT;
    index               index.html index.nginx-debian.html;

    ssl_dhparam             /etc/nginx/ssl/dhparam.pem;
    ssl_certificate         /etc/nginx/ssl/nginx.crt;
    ssl_certificate_key     /etc/nginx/ssl/nginx.key;
    ssl_session_cache       shared:SSL:10m;
    ssl_session_timeout     10m;


    ssl_protocols   TLSv1 TLSv1.1 TLSv1.2;
    # mozilla recommended
    ssl_ciphers     TLS13-AES-128-GCM-SHA256:TLS13-AES-256-GCM-SHA384:TLS13-CHACHA20-POLY1305-SHA256:TLS13-AES-128-CCM-8-SHA256:TLS13-AES-128-CCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS;

    ssl_prefer_server_ciphers   on;
    add_header Strict-Transport-Security "max-age=31536000; includeSubdomains;";
    #add_header  X-Content-Type-Options "nosniff";
    #add_header X-Frame-Options DENY;
    ssl_buffer_size     1369;
    ssl_session_tickets on;

    # enable ocsp stapling
    #resolver 8.8.8.8 8.8.4.4 valid=10m;
    #resolver_timeout 10s;
    #ssl_stapling on;
    #ssl_stapling_verify on;
    #ssl_trusted_certificate /etc/nginx/ssl/nginx.crt;


    location / {
        try_files $uri $uri/ /index.php;
    }
    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
}